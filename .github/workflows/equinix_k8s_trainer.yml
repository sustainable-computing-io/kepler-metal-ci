name: Equinix k8s Action integration with Model Trainer

on:
  workflow_dispatch:
    inputs:
      termination_time:
        description: 'Cluster termination time in hours after now'
        required: true
        default: '1'
      control_plan:
        description: 'control plane machine type'
        required: false
        default: 'c3.small.x86'
      node_plan:
        description: 'node machine type'
        required: false
        default: 'c3.small.x86'
      metro:
        description: 'metro location'
        required: false
        default: 'da'
      kepler_model_server_repo:
        description: 'kepler model server'
        required: true
        default: 'https://github.com/sustainable-computing-io/kepler-model-server.git'

permissions:
  pull-requests: write
  contents: write
  repository-projects: write
  packages: write


jobs:
  Create-k8s-cluster:
    name: "Create Cluster"
    uses: ./.github/workflows/create_equinix_k8s_cluster.yml
    secrets: inherit
    with:
      termination_time: ${{ github.event.inputs.termination_time || '1' }}
      control_plan: ${{ github.event.inputs.control_plan }}
      node_plan: ${{ github.event.inputs.node_plan }}
      metro: ${{ github.event.inputs.metro }}

  Test-K8s:
    name: "Test K8s"
    needs: Create-k8s-cluster
    runs-on: ubuntu-latest

    env:
      TEKTON_PATH: ${{ github.workspace }}/kepler-model-server/model-training/tekton

    steps:
      - name: Config kube
        uses: ./.github/actions/kube_config
        with:
          ## kube config
          artifact_name: kubeconfig-${{ github.run_id }}

      - name: Set up Kepler
        uses: ./.github/actions/setup_kepler

      - name: Clone Kepler Model Server
        run: |
          cd ~
          git clone https://github.com/sustainable-computing-io/kepler-model-server.git
          ls ${TEKTON_PATH}
          ls ${TEKTON_PATH}/pvc/hostpath.yamls
          ls ${TEKTON_PATH}/tasks
          ls ${TEKTON_PATH}/tasks/s3
          ls ${TEKTON_PATH}/pipelines

      - name: Deploy Tekton Training Tasks
        run: |
          ls ${{ github.workspace }}/kepler-model-server/model-training/tekton
          kubectl apply -f ${TEKTON_PATH}/pvc/hostpath.yaml
          kubectl apply -f ${TEKTON_PATH}/tasks
          kubectl apply -f ${TEKTON_PATH}/tasks/s3
          kubectl apply -f ${TEKTON_PATH}/pipelines

      - name: Run Complete Training
        run: kubectl apply -f ${TEKTON_PATH}/examples/single-train/abs-power.yaml
      
      - name: Wait for Tekton Training
        run: |
          chmod +x ${{ github.workspace }}/util/wait_for_pipelineruns.sh
          ${{ github.workspace }}/util/wait_for_pipelineruns.sh
      
      - name: Deploy Model Inspector
        run: kubectl apply -f ${{ github.workspace }}/util/inspect.yml
    
      - name: Wait for inspector pod to complete
        run: |
          POD_NAME="inspector-pod"
          while [[ $(kubectl get pod $POD_NAME -o 'jsonpath={..status.conditions[?(@.type=="Ready")].status}') != "True" ]]; do
            echo "Waiting for pod $POD_NAME to be ready..."
            sleep 10
          done
          while [[ $(kubectl get pod $POD_NAME -o 'jsonpath={..status.phase}') != "Succeeded" ]]; do
            echo "Waiting for pod $POD_NAME to complete..."
            sleep 10
          done

      - name: Copy models from pod to runner
        run: |
          kubectl cp default/inspector-pod:/mnt/trained_models.tar.gz ./trained_models.tar.gz
      
      - name: Upload models as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: trained_models-${{ github.run_id }}-$(date +%F)
          path: ./trained_models.tar.gz
          retention-days: 30
