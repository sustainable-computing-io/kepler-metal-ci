name: Training and Validation e2e with Single Server

on:
  workflow_dispatch:
    inputs:
      target_models:
        description: 'Comma Separated List of Models to Train. Format: model_type/feature_type/trainer_name'
        required: false
        default: 'AbsPower/BPFOnly/SGDRegressorTrainer,AbsPower/BPFOnly/ExponentialRegressionTrainer,AbsPower/BPFOnly/LogarithmicRegressionTrainer'
      model_server_image:
        description: 'Model Server Image to use for validation'
        required: false
        default: 'quay.io/sustainable_computing_io/kepler_model_server:v0.7.12'

permissions:
  pull-requests: write
  contents: write
  repository-projects: write
  packages: write

jobs:    
  Create-runner:
    name: "Create Runner"
    uses: ./.github/workflows/create_equinix_runner.yml
    secrets: inherit

  Validate:
    name: "Validate"
    needs: Create-runner
    runs-on: self-hosted
    continue-on-error: true
    outputs:
      runner-name: ${{ runner.name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run Setup Runner Action
        uses: ./.github/actions/setup-action

      - name: Run Setup Playbooks
        env:
          MODEL_SERVER_IMAGE: ${{ github.event.inputs.model_server_image }}
        run: |
          cd ${GITHUB_WORKSPACE}/ansible 
          echo "Create VM"
          ansible-playbook -i inventory.yml kvm_playbook.yml
          echo "Install SSH tunnel"
          ansible-playbook ssh_tunnel_playbook.yml
          echo "Install Prometheus"
          ansible-playbook -i inventory.yml metrics_playbook.yml
          echo "Install Node Exporter"
          ansible-playbook -i inventory.yml node_exporter_playbook.yml -vvv
          echo "Verify node-exporter"
          sudo systemctl status node_exporter || true
          sudo ss -tuln | grep 9100 || true
          curl -s localhost:9100/metrics | grep collector || true
          echo "Install Kepler"
          ansible-playbook -i inventory.yml -vvv kepler_playbook.yml
          echo "Create ssh tunnel"
          ansible-playbook -i inventory.yml ssh_tunnel_playbook.yml

          echo "Install Model Server"
          ansible-playbook -i inventory.yml -vvv model_server_playbook.yml

      - name: Run Trainer Action
        uses: ./.github/actions/train-action
        with:
          model_export_path: /tmp/trained-equinix-models
      
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run Validation Playbooks
        run: |
          cd ${GITHUB_WORKSPACE}/ansible
          echo "Pass Trained Models to VM"
          ansible-playbook -i inventory.yml -v deploy_http_model_server.yml
          
          target_models_list="${{ github.event.inputs.target_models }}"
          IFS=',' read -r -a models <<< "$target_models_list"
          for model in "${models[@]}"
          do
            echo "Running Model Server Playbook: $model"
            model_url="http://localhost:8080/${model}_0.zip"
            echo "Model exists with sufficient accuracy: $model_url"
            ansible-playbook -i inventory.yml -vvv model_server_restart.yml \
              -e "node_components_init_url=$model_url"
            echo "Run validation test"
            ansible-playbook -vvv kepler_validator.yml
            echo "Validation Finished"

            FILE="/tmp/validator-*/*"
            mkdir -p /tmp/reports/${model}
            mv $FILE /tmp/reports/${model}
          done

          export DATE_STR=$(date +%Y-%m-%d_%H-%M-%S)
          cd ${GITHUB_WORKSPACE}
          mkdir -p docs/train-validate-e2e/${DATE_STR}
          mv /tmp/reports/* docs/train-validate-e2e/${DATE_STR}
          mv /tmp/trained-equinix-models/train_logs.txt docs/train-validate-e2e/${DATE_STR}

          git config user.email "dependabot[bot]@users.noreply.github.com"
          git config user.name "dependabot[bot]"
          git add docs/*
          git commit -m "Add train-validate-e2e single server for ${DATE_STR}" -s
          git pull --rebase
          git push
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: List available RAPL domains
        run: |
          for file in $(sudo find -L /sys/class/powercap/intel-rapl -name name  2>/dev/null); do cat $file;  done  | sort -n| uniq | tee -a /tmp/rapl-domain-availability.txt

      - name: Generate report
        run: |
          ls /tmp
          cat /tmp/report-*.md || true
          # create a directory to store the artifacts, the directory is the current date 
          set -x
          export DATE_STR=$(date +%Y-%m-%d)
          export TIME_STR=$(date +%H-%M-%S)
          cd ${GITHUB_WORKSPACE}
          mkdir -p docs/validation/${DATE_STR}
          export KEPLER_TAG=$(ls -d /tmp/validator-* |tail -1 | sed 's/.*validator-//g')
          # python -m pip install --upgrade pip
          # pip install tabulate
          # python util/generate_daily_validations.py \
          #   --report-md-filepath docs/daily-validations/daily-validations-kepler-standalone/daily-report.md \
          #   --report-json-filepath docs/daily-validations/daily-validations-kepler-standalone/daily-report.json \
          #   --new-val-filepath /tmp/validator-${KEPLER_TAG}/${KEPLER_TAG}.json

          # copy the report to the directory
          mv /tmp/validator-${KEPLER_TAG}/ docs/validation/${DATE_STR}/validator-${KEPLER_TAG}-${TIME_STR}/
          mv /tmp/rapl-domain-availability.txt docs/validation/${DATE_STR}/validator-${KEPLER_TAG}-${TIME_STR}/
          echo "| " ${DATE_STR} " | " ${KEPLER_TAG}-${TIME_STR} " | [Report](validation/${DATE_STR}/validator-${KEPLER_TAG}-${TIME_STR}/report-${KEPLER_TAG}.md) | [Artifacts](validation/${DATE_STR}/validator-${KEPLER_TAG}-${TIME_STR}/artifacts) |" \
            >> docs/kepler-model-validation.md

          
          # Push to the repo
          git config user.email "dependabot[bot]@users.noreply.github.com"
          git config user.name "dependabot[bot]"
          git add docs/*
          git commit -m "Add validation report for ${DATE_STR}-${TIME_STR}" -s
          git pull --rebase
          git push
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Update model validation chart
        run: |
          export DATE_STR=$(date +%Y-%m-%d)
          export TIME_STR=$(date +%H-%M-%S)
          cd ${GITHUB_WORKSPACE}
          cd docs/analytics
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python ./kepler_analytics.py
          # update git
          git config user.email "dependabot[bot]@users.noreply.github.com"
          git config user.name "dependabot[bot]"
          cd ${GITHUB_WORKSPACE}
          git add docs/analytics/*
          git add docs/kepler-model-validation-chart.md
          git commit -m "Add validation chart for ${DATE_STR}-${TIME_STR}" -s
          git pull --rebase
          git push
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}


  Cleanup:
    name: "Cleanup"
    needs: [Validate]
    uses: ./.github/workflows/clean_equinix_runner.yml
    secrets: inherit
    with:
      runner_name: ${{ needs.Validate.outputs.runner-name }}
