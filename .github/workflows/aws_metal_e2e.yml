name: Training and Validation e2e with Single AWS Instance

on:
  workflow_dispatch:
    inputs:
      target_models:
        description: 'Comma Separated List of Models to Train. Format: model_type/feature_type/trainer_name'
        required: false
        default: 'AbsPower/BPFOnly/SGDRegressorTrainer,AbsPower/BPFOnly/ExponentialRegressionTrainer,AbsPower/BPFOnly/LogarithmicRegressionTrainer,AbsPower/BPFOnly/PolynomialRegressionTrainer,AbsPower/BPFOnly/XgboostFitTrainer'
      model_server_image:
        description: 'Model Server Image to use for validation'
        required: false
        default: 'quay.io/sustainable_computing_io/kepler_model_server:latest'
      ami_id:
        description: 'AMI ID to use for the instance'
        required: false
        default: 'ami-01529018e3919dace' # CentOS stream 9, per https://www.centos.org/download/aws-images/
      instance_type:
        description: 'Instance Type to use for the instance'
        required: false
        default: 'i3.metal'
      spot_instance_only:
        description: 'Whether to use spot instances only'
        required: false
        default: 'true'

permissions:
  pull-requests: write
  contents: write
  repository-projects: write
  packages: write


jobs:
  setup-runner:
    name: "Create AWS Runner"
    uses: ./.github/workflows/create_aws_runner.yml
    secrets: inherit
    with:
      ami_id: ${{ github.event.inputs.ami_id }}
      instance_type: ${{ github.event.inputs.instance_type }}
      spot_instance_only: ${{ github.event.inputs.spot_instance_only }}

  test-runner:
    needs: setup-runner
    continue-on-error: true
    name: GitHub Self Hosted Runner Tests
    runs-on: [self-hosted, linux, x64]


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print Runner Info
        run: |
          export INSTANCE_ID="${{ needs.setup-runner.outputs.instance_id }}"
          echo "Starting self-hosted runner with instance ${INSTANCE_ID}"
          uname -a # or any other command
          cat /etc/os-release 
          cat /proc/cpuinfo 

      - name: Run Setup Runner Action
        uses: ./.github/actions/setup-action

      # - name: Run Setup Playbooks
      #   env:
      #     MODEL_SERVER_IMAGE: ${{ github.event.inputs.model_server_image }}
      #   run: |
      #     sudo setenforce 0
      #     cd ${GITHUB_WORKSPACE}/ansible 
      #     echo "Install Metal Prometheus"
      #     ansible-playbook -i inventory.yml metal_prometheus.yml
      #     echo "Install Node Exporter"
      #     ansible-playbook -i inventory.yml node_exporter_playbook.yml -vvv
      #     echo "Verify node-exporter"
      #     sudo systemctl status node_exporter || true
      #     sudo ss -tuln | grep 9100 || true
      #     curl -s localhost:9100/metrics | grep collector || true
      #     echo "Install Kepler"
      #     ansible-playbook -i inventory.yml -vvv kepler_playbook.yml

      # - name: Run Trainer Action
      #   uses: ./.github/actions/train-action
      #   with:
      #     model_export_path: /tmp/trained-equinix-models
      #     total_runtime_seconds: 600
      
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Validation Playbooks          
        run: |
          sleep 7000
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          TOTAL_RUNTIME_SECONDS: 600
          VALIDATOTR_CURVE_TYPE: "default"
 
  destroy-runner:
    if: always()
    name: "Destroy AWS Runner"
    needs: [setup-runner, test-runner]
    uses: ./.github/workflows/clean_aws_runner.yml
    secrets: inherit
    with:
      runner_name: ${{ needs.setup-runner.outputs.runner_name }}
      instance_id: ${{ needs.setup-runner.outputs.instance_id }}
