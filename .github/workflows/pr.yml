## trigger by PR
name: "pr-test"
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'
  schedule: [{cron: "0 0 1 */3 *"}]

jobs:
  pr_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      ## using kepler-action to set up a kind cluster for dummy
      - name: use Kepler action to deploy cluster
        uses: sustainable-computing-io/kepler-action@v0.0.10
        with:
          local_dev_cluster_version: v0.0.9
          kubeconfig_root_dir: /tmp/kubeconfig
          cluster_provider: kind
      - name: Upload kubeconfig
        uses: actions/upload-artifact@v4
        with:
          name: kubeconfig-pr-${{ github.run_id }}
          path: /tmp/kubeconfig
          retention-days: 1
      - name: clean up kubeconfig as in new instance the kubeconfig should download from artifact
        shell: bash
        run: |
          rm -rf /tmp/kubeconfig
      ## using a reusable pipeline for validation without commit, as dummy cluster the values are allowed to be none.
      - name: Config kube
        uses: ./.github/actions/kube_config
        with:
          ## kube config
          artifact_name: kubeconfig-pr-${{ github.run_id }}
      - name: Set up Kepler
        uses: ./.github/actions/setup_kepler
      - name: test_kepler_with_kubeburner
        id: test_kepler_with_kubeburner
        uses: ./.github/actions/kepler_validation_with_kubeburner
        with:
          timeout: 1m
      - name: check outputs
        shell: bash
        run: |
          echo ${{ steps.test_kepler_with_kubeburner.outputs.start_time }}
          echo ${{ steps.test_kepler_with_kubeburner.outputs.end_time }}
      - name: generate_report
        shell: bash
        run: |
          cd ${{ github.workspace }}/kube-burner-config
          touch /tmp/kepler-stress-test-metrics.txt
          touch /tmp/kepler-stress-test-kube-apiserver-metrics.txt
          # Retrieve metrics related to Kepler cpu and memory utilization over time
          export query="sum (rate (container_cpu_usage_seconds_total{namespace="kepler"}[1m])) / sum(machine_cpu_cores) * 100"
          ./fetchmetric.sh $query /tmp/kepler-stress-test-metrics.txt
          # Retrieve the kube-apiserver cpu and memory utilization over time
          export query="sum (rate (container_cpu_usage_seconds_total{namespace="kube-system", pod=~"kube-apiserver-.*"}[1m])) / sum(machine_cpu_cores) * 100"
          ./fetchmetric.sh $query /tmp/kepler-stress-test-kube-apiserver-metrics.txt
          cd ${GITHUB_WORKSPACE}
          echo -n "| " ${{ steps.test_kepler_with_kubeburner.outputs.end_time }} >> docs/kepler-stress-test-metrics.md
          MEAN_SD_OUTPUT=$(./util/calc_mean_sd.awk /tmp/kepler-stress-test-metrics.txt)
          KUBE_APISERVER_MEAN_SD_OUTPUT=$(./util/calc_mean_sd.awk /tmp/kepler-stress-test-kube-apiserver-metrics.txt)
          echo $MEAN_SD_OUTPUT "  " $KUBE_APISERVER_MEAN_SD_OUTPUT >> docs/kepler-stress-test-metrics.md

      ## kepler-model-server
      - name: Set up Kepler model server
        uses: ./.github/actions/kepler_model_server
