name: config_and_setup
## using a reusable pipeline for config cluster    
description: 'Action to Setup k8s cluster, kepler'
runs:
  using: 'composite'
  steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: try best to get kube config
        shell: bash
        run: |
          mkdir -p /tmp/kubeconfig/
          cp -r ~/.kube/config /tmp/kubeconfig/config

      - name: use Kepler action to deploy cluster
        uses: sustainable-computing-io/kepler-action@v0.0.10
        with:
          cluster_provider: existing
          prometheus_enable: true
          tekton_enable: true
          prometheus_operator_version: v0.13.0

      - name: Port forward prom
        shell: bash
        run: |
          kubectl port-forward -n monitoring svc/prometheus-k8s 9090:9090 &

      ## using a reusable pipeline for kepler
      - name: Install Kepler helm chart
        shell: bash
        run: |
          # Install helm binary first
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          export PATH=$PATH:/usr/local/bin
          helm repo add kepler https://sustainable-computing-io.github.io/kepler-helm-chart
          helm repo update
          helm install kepler kepler/kepler --namespace kepler --create-namespace --set serviceMonitor.enabled=true --set image.tag=latest \
            --set extraEnvVars.EXPOSE_COMPONENT_POWER="false" --set extraEnvVars.EXPOSE_ESTIMATED_IDLE_POWER_METRICS="true" --set extraEnvVars.EXPOSE_BPF_METRICS="false" \
            --set extraEnvVars.EXPERIMENTAL_BPF_SAMPLE_RATE=1000

      - name: Allow prometheus to scrape kepler metrics in kepler namespace
        shell: bash
        run: |
          curl -O https://raw.githubusercontent.com/sustainable-computing-io/kepler/main/manifests/k8s/config/rbac/prometheus_role.yaml
          sed -i 's/namespace: system/namespace: kepler/' prometheus_role.yaml
          kubectl apply -f prometheus_role.yaml
          kubectl apply -f - <<EOF
          apiVersion: rbac.authorization.k8s.io/v1
          kind: RoleBinding
          metadata:
            labels:
              app.kubernetes.io/component: prometheus
              app.kubernetes.io/instance: k8s
              app.kubernetes.io/name: prometheus
              sustainable-computing.io/app: kepler
            name: prometheus-k8s
            namespace: kepler
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: Role
            name: prometheus-k8s
          subjects:
          - kind: ServiceAccount
            name: prometheus-k8s
            namespace: monitoring
          EOF

      - name: Wait for Kepler metrics kepler_node_package_joules_total is not empty through Prometheus query
        shell: bash
        run: |
          ${GITHUB_WORKSPACE}/util/wait_for_prometheus.sh