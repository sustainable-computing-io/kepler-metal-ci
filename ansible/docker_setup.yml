---
- name: Setup infrastructure with necessary packages, Docker and Hatch
  hosts: "{{ target_host | default('all') }}"
  become: yes
  vars:
    ansible_user: root
  tasks:
    - name: Ensure necessary packages are installed on BM
      apt:
        name:
          - ca-certificates
          - curl
          - jq
        state: present
        update_cache: true
      when: ansible_hostname != "my-vm"

    - name: Ensure necessary packages are installed on VM
      dnf:
        name:
          - curl
          - dnf-plugins-core
          - stress-ng
          - jq
        state: present
      when: ansible_hostname == "my-vm"

    - name: Install hatch via pip
      pip:
        name: hatch
        state: latest
      when: ansible_hostname != "my-vm"

    - name: Add Docker official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_hostname != "my-vm"

    - name: Set up Docker stable repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present
      when: ansible_hostname != "my-vm"

    - name: Update the apt package index
      apt:
        update_cache: true
      when: ansible_hostname != "my-vm"

    - name: Install Docker Engine and related packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
          - docker-buildx-plugin
        state: latest
      when: ansible_hostname != "my-vm"

    - name: Add Docker repository on VM
      command: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      when: ansible_hostname == "my-vm"

    - name: Install Docker on VM
      dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin 
          - docker-compose-plugin
        state: latest
      when: ansible_hostname == "my-vm"

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started

    - name: Add user to Docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: true

    - name: Verify Docker installation
      command: docker --version
      register: docker_version

    - name: Display Docker version
      debug:
        msg: "{{ docker_version.stdout }}"
