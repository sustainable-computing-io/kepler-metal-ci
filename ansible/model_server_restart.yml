- name: Deploy Model Server
  hosts: model_server
  become: yes
  vars:
    model_config: |
      NODE_TOTAL_ESTIMATOR={{ node_total_estimator }}
      NODE_COMPONENTS_ESTIMATOR={{ node_components_estimator }}
      NODE_TOTAL_INIT_URL={{ node_total_init_url }}
      NODE_COMPONENTS_INIT_URL={{ node_components_init_url }}
  tasks:
    - name: Update MODEL_CONFIG
      ansible.builtin.copy:
        dest: /mnt/kepler-config/kepler.config/MODEL_CONFIG
        content: "{{ model_config }}"

    - name: Restart Estimator service
      ansible.builtin.systemd:
        name: container-estimator
        state: restarted

    - name: Restart Model Server service
      ansible.builtin.systemd:
        name: container-model-server
        state: restarted

    - name: Sleep for 10 seconds to ensure estimator is fully up and download the models
      ansible.builtin.wait_for:
        timeout: 10

    - name: Run podman logs estimator and print the output
      ansible.builtin.shell: podman logs estimator
      register: estimator_logs
      failed_when: estimator_logs.rc != 0
      changed_when: estimator_logs.rc != 0
   
    - name: Print Estimator Logs
      ansible.builtin.debug:
        msg: "{{ estimator_logs.stdout }}"

    - name: Restart Kepler service
      ansible.builtin.systemd:
        name: container-kepler
        state: restarted

    - name: Sleep for 10 seconds to ensure kepler is fully up
      ansible.builtin.wait_for:
        timeout: 10

    - name: Run podman logs kepler and print the output
      ansible.builtin.shell: podman logs kepler
      register: kepler_logs
      failed_when: kepler_logs.rc != 0
      changed_when: kepler_logs.rc != 0

    - name: Print Kepler Logs
      ansible.builtin.debug:
        msg: "{{ kepler_logs.stdout }}"

    - name: Include Validation for Kepler and Model Server
      include_tasks: tasks/validate_model_server.yml
